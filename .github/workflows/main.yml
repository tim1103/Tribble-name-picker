name: Build and Release

on:
  push:
    tags:
      - '*'  # 监听所有新tag的推送

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # 获取完整的git历史记录（包含tag信息）

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y fakeroot dpkg

    - name: Install project dependencies
      run: npm install

    - name: Build app
      run: npm run dist
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}  # 使用推送的tag名称
        name: Release ${{ github.ref_name }}
        body: |  # 可自定义Release描述
          Auto-generated release for tag ${{ github.ref_name }}
          Build artifacts:
          - Debian Package (.deb)
          - AppImage
          - Windows Installer (.exe)
          - Portable Version (.portable.exe)
        files: |
          dist/*.deb
          dist/*.AppImage
          dist/*.exe
          dist/*.portable.exe
      if: matrix.os == 'ubuntu-latest'  # 仅在Ubuntu环境上传（避免重复）
