name: Build and Release

on: workflow_dispatch

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # 只保留需要的系统
        include:
          - os: ubuntu-latest
            platform: linux
            target: deb
          - os: windows-latest
            platform: win
            target: nsis

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y fuse

      - name: Fix Linux FUSE Permissions
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo modprobe fuse
          sudo chmod 666 /dev/fuse
          sudo chown root:root /dev/fuse

      - name: Install Windows Build Tools
        if: matrix.os == 'windows-latest'
        run: |
          npm install --global windows-build-tools
          choco install -y python3 nsis
    
      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-build
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: |
            Automated build for version ${{ github.ref_name }}
            - Linux DEB package
            - Windows Installer
          files: |
            artifacts/linux-build/*.deb
            artifacts/win-build/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
